snippet cnk "select k from n"
ll cnk(int n, int k){
  // ${1:domod}
  if(n<k)return 0;
  ll ret=1, lln=(ll)n;
  for(int i=1;i<=k;i++){ `!p
if t[1]=="domod":
  snip.rv = "ret = (ret*(lln-i+1)/i)%MODV;"
else:
  snip.rv = "ret = ret*(lln-i+1)/i;"
` }
  return ret;
}
endsnippet

snippet gcd "gcd of two numbers"
${1:int} gcd($1 a, $1 b){
  if(b==0)return a;
  return gcd(b,a%b);
}
endsnippet

snippet lcm "lcm of two numbers"
${1:int} lcm($1 a, $1 b){
  $1 g=gcd(a,b);
  return (a/g)*b;
}
endsnippet

snippet power "a to the power of b"
int power(int a, int b) {
  int res = 1;
  while (b > 0) {
    if (b & 1) { mulmod(res, a); }
    b >>= 1;
    mulmod(a, a);
  }
  return res;
}
endsnippet

snippet inversemod "inverse mod of a number"
int inv(int a) { return power(a, MODV - 2); }
endsnippet
