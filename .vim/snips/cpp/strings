snippet kmp "knuth morris pratt"
template <typename T>
void kmp(const T &a, const T &b){
  int n=a.size(), m=b.size(), i, j;
  int *pf;
  bool *mt;
  pf = new int[n+1];
  mt = new bool[m+1];
  memset(mt,false,sizeof(bool)*(m+1));
  pf[0]=pf[1]=0;
  for(i=2;i<=n;i++){
    j=pf[i-1];
    while(j>0 && a[i-1]!=a[j])j=pf[j];
    if(a[i-1]==a[j])j++;
    pf[i]=j;
  }
  for(i=0,j=0;i<m;i++){
    while(j>0 && a[j]!=b[i])j=pf[j];
    if(a[j]==b[i])j++;
    if(j==n){
      mt[i]=1;
      j=pf[j];
    }
  }
}
endsnippet

snippet calcz "z algorithm pattern matching"
template <typename T>
void zalgo(const T &s) {
  int L = 0, R = 0, *z;
  int n=strlen(s);
  z = new int[n+1];
  for (int i = 1; i < n; i++) {
    if (i > R) {
      L = R = i;
      while (R < n && s[R-L] == s[R]) R++;
      z[i] = R-L; R--;
    } else {
      int k = i-L;
      if (z[k] < R-i+1) z[i] = z[k];
      else {
        L = i;
        while (R < n && s[R-L] == s[R]) R++;
        z[i] = R-L; R--;
      }
    }
  }
}
endsnippet
