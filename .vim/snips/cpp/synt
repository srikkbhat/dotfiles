snippet start "start program"
#include <bits/stdc++.h>
using namespace std;

//${1:0} 1->codeforces`!p
if t[1]=="1":
  snip.rv= "\n#ifdef ONLINE_JUDGE\n#define LL \"%I64d\"\n#else\n#define LL \"%lld\"\n#endif"
else:
  snip.rv="\n#define LL \"%lld\""
`
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define PN printf("\n")
#define MODV 1000000007

typedef long long ll;
typedef double dbl;
typedef vector<int> vi;
typedef pair<int, int> pi;
void addmod(int &a, ll b){a=(a+b); if(a>=MODV)a-=MODV;}
void mulmod(int &a, ll b){a=(a*b)%MODV;}
int gi(){int a;scanf("%d",&a);return a;}
ll gll(){ll a;scanf(LL,&a);return a;}

int main() {
  $0
  return 0;
}
endsnippet

snippet startgcj "google code jam  start program"
#include <bits/stdc++.h>
using namespace std;

#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define MODV 1000000007

typedef long long ll;
typedef double dbl;
typedef vector<int> vi;
typedef pair<int, int> pi;
void addmod(int &a, ll b){a=(a+b); if(a>=MODV)a-=MODV;}
void mulmod(int &a, ll b){a=(a*b)%MODV;}
int gi(){int a;scanf("%d",&a);return a;}
ll gll(){ll a;scanf("%lld",&a);return a;}

void doit() {
  $0
}

int main() {
  int tc=gi();
  for(int i=1;i<=tc;i++){
    printf("Case #%d: ",i);
    doit();
    puts("");
  }
  return 0;
}
endsnippet

snippet startusaco "uscao start program"
/*
   ID: srikkbh1
   PROG: ${1:test}
   LANG: C++11
 */

#include <bits/stdc++.h>

using namespace std;

#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define MODV 1000000007
typedef pair<int, int> pi;
typedef long long ll;
typedef double dbl;
typedef vector<int> vi;
void addmod(int &a, ll b){a=(a+b); if(a>=MODV)a-=MODV;}
void mulmod(int &a, ll b){a=(a*b)%MODV;}
int gi(){int a;scanf("%d",&a);return a;}
ll gll(){ll a;scanf("%lld",&a);return a;}

int main() {
#ifndef SRIKKHOME
  freopen("$1.in", "r",stdin);
  freopen("$1.out", "w",stdout);
#endif
  $0
  return 0;
}
endsnippet

snippet testcases "test case loop"
int ${1:tc}=gi();
for(int ${2:i}=0;$2<$1;$2++){doit();}
endsnippet

snippet for "for loop"
for(int ${1:i}=${2:0};$1<${3:n};$1++){
  $0
}
endsnippet

snippet fordecrease "for loop decrement"
for(int ${1:i}=${2:n};$1>=0;$1--){
  $0
}
endsnippet

snippet forcontainers "for loop for map/set/vector etc"
for(auto ${1:i}:${2:a}){
  $0
}
endsnippet

snippet foriterators "for loop for map/set/vector etc"
for(auto ${1:it}=${2:mp}.begin();$1!=$2.end();$1++){
  $0
}
endsnippet

snippet strdelimit "parse string using a delimiter"
static const char DELIM[] = "$1"
char * $2;

$2 = strtok($3, DELIM);
while( $2 != NULL){
  $2 = strtok(NULL, DELIM);
}
endsnippet

snippet strconv "convert char array to c++ string"
string $1 = string($2);
endsnippet

snippet strrev "convert c++ string to char array"
char * $1 = $2.c_str();
endsnippet

snippet dtostr "convert double to char array"
char $1[$2];
sprintf($1, "%0.2f", $3);
endsnippet

snippet lltostr "convert long long to char array"
char $1[$2];
sprintf($1, "%lld", $3);
endsnippet

snippet itostr "convert int to char array"
char $1[$2];
sprintf($1, "%d", $3);
endsnippet

snippet strtod "convert char array to double"
double $1;
$1 = strtod($2, NULL);
endsnippet

snippet strtomd "convert char array to many double"
double $1;
char * $2;
$1 = strtod($3, &$2);
$1 = strtod($2, NULL);
endsnippet

snippet strtoi "convert char array to int"
int $1;
$1 = (int) strtol($2, NULL, 10);
endsnippet

snippet strtomi "convert char array to many int"
int $1;
char * $2;
$1 = (int) strtol($3, &$2, 10);
$1 = (int) strtol($2, NULL, 10);
endsnippet

snippet strtoll "convert char array to long long"
long long $1;
$1 = strtoll($2, NULL, 10);
endsnippet

snippet strtomll "convert char array to many long long"
long long $1;
char * $2;
$1 = strtoll($3, &$2, 10);
$1 = strtoll($2, NULL, 10);
endsnippet

snippet scanarray "scanf array"
for(auto ${1:i}=0;$1<${2:n};$1++){ ${3:a}[$1]=${4:gi()}; }
$0
endsnippet

snippet scanstr "scanf string"
char *${1:s};
$1 = new char[${2:MAXN}];
scanf("%s", $1);
endsnippet

snippet scanline "scan line"
static const size_t MAXL=${1:1000};
char *${2:line} = new char[MAXL];
cin.ignore();
fgets($2,$1,${3:stdin})
endsnippet

snippet scanuntileof "scanf until end of file"
static const size_t MAXL=${1:1000};
char *${2:line} = new char[MAXL];
while (fgets($2,$1,${3:stdin}) != NULL){
  $0
}
endsnippet

snippet sortarray "sort array"
sort(${1:arr}, $1+${2:n});
$0
endsnippet

snippet sortcollection "sort collection"
sort(${1:a}.begin(), $1.end());
$0
endsnippet

snippet memset "array filling"
memset(${1:a},${2:0},sizeof(${3:int})${4:*n});
$0
endsnippet
